
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000035cc memsz 0x000035d0 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080035d0 align 2**15
         filesz 0x00000018 memsz 0x00000fd8 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000034dc  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080035cc  080035cc  0000b5cc  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000018  20000800  080035d0  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000fc0  20000818  080035e8  00010818  2**3
                  ALLOC
  6 .debug_info   00009805  00000000  00000000  00010818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002189  00000000  00000000  0001a01d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000860  00000000  00000000  0001c1a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000006d0  00000000  00000000  0001ca06  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000039d0  00000000  00000000  0001d0d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001cfc  00000000  00000000  00020aa6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      00000030  00000000  00000000  000227a2  2**0
                  CONTENTS, READONLY
 13 .ARM.attributes 00000033  00000000  00000000  000227d2  2**0
                  CONTENTS, READONLY
 14 .debug_frame  00001474  00000000  00000000  00022808  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00001a38  00000000  00000000  00023c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
080035cc l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000818 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800039c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008d8 l     O .bss	00000048 mainthread.4651
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000b40 l     F .text	00000022 fifo_remove
08000b70 l     F .text	00000020 dequeue
08000d20 l     F .text	0000007c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000f30 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
08001210 l     F .text	00000046 prio_insert
08001260 l     F .text	00000022 fifo_remove
08001290 l     F .text	00000020 dequeue
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080015e0 l     F .text	00000028 queue_insert
08001610 l     F .text	00000022 fifo_remove
08001640 l     F .text	00000048 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d64 l     O .bss	00000004 nextmem
20000d68 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001bb0 l     F .text	00000026 writes
08001be0 l     F .text	00000026 reads
08001c10 l     F .text	00000016 putwouldblock
08001c30 l     F .text	00000016 getwouldblock
08001c50 l     F .text	0000002a putt
08001c80 l     F .text	0000001e gett
08001ca0 l     F .text	00000026 writet
08001cd0 l     F .text	00000026 readt
08001d00 l     F .text	00000034 getflags
08003530 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
08001eb0 l     F .text	0000008c hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 serial_lld.c
08003560 l     O .text	0000000c default_config
08002160 l     F .text	00000090 usart_init
080021f0 l     F .text	0000009c set_error
08002290 l     F .text	000001a2 serve_interrupt
08002440 l     F .text	00000024 notify1
00000000 l    df *ABS*	00000000 pal_lld.c
08003570 l     O .text	00000012 cfgtab.5749
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
200011c0 l     O .bss	00000020 buffer
200011e0 l     O .bss	00000020 args
20001200 l     O .bss	00000001 slash.6121
20001204 l     O .bss	00000004 out_index.6122
080028e0 l     F .text	00000064 process_command
08002950 l     F .text	00000048 exec_func
20000800 l     O .data	00000018 funcs
080029a0 l     F .text	0000004e hardware_version
080029f0 l     F .text	00000052 firmware_version
08002a50 l     F .text	00000018 set_led
08002a70 l     F .text	00000020 dfu_push
08002a90 l     F .text	00000038 dfu_write_sector
08002ad0 l     F .text	0000000e dfu_run_firmware
08002ae0 l     F .text	00000040 writeResult
08002b20 l     F .text	00000018 writeEom
00000000 l    df *ABS*	00000000 led_ctrl.c
20001208 l     O .bss	00000010 mutex
20001218 l     O .bss	00000004 value
20001220 l     O .bss	000001b0 waLeds
08002b40 l     F .text	000000be ledsThread
200013d0 l     O .bss	00000004 arg.5785
00000000 l    df *ABS*	00000000 dfu_ctrl.c
200013d4 l     O .bss	00000400 sector
200017d4 l     O .bss	00000004 byteIndex
08002ea0 l     F .text	00000046 startFirmwareI
00000000 l    df *ABS*	00000000 stm32f10x_flash.c
08003590 g     O .text	0000003c pal_default_config
08000200  w    F .text	00000002 Vector58
08000200  w    F .text	00000002 VectorE8
08000200  w    F .text	00000002 Vector9C
080003e0 g     F .text	000000a4 nvicEnableVector
08000740 g     F .text	0000003a dbg_check_lock_from_isr
08002f10 g     F .text	00000026 FLASH_Unlock
08001520 g     F .text	00000070 chEvtSignalFlagsI
08002e90 g     F .text	0000000c dfuStartFirmware
08000200  w    F .text	00000002 VectorAC
08001170 g     F .text	0000001c chThdExit
080005c0 g     F .text	000000ce chSysTimerHandlerI
08001590 g     F .text	0000004c chEvtBroadcastFlagsI
08000da0 g     F .text	0000006a chSchGoSleepTimeoutS
08001320 g     F .text	0000010e chMtxLockS
080006c0 g     F .text	0000003a dbg_check_lock
08000200  w    F .text	00000002 Vector5C
08000200  w    F .text	00000002 NMIVector
08001000 g     F .text	0000002a _thread_memfill
08002c00 g     F .text	0000007a initLed
08003000 g     F .text	000000c4 FLASH_ProgramWord
08002d70 g     F .text	00000118 dfuWriteSector
08002ce0 g     F .text	00000086 dfuPushBytes
08000200  w    F .text	00000002 Vector8C
08000200  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
080027c0 g     F .text	00000114 processCpuIo
08000c80 g     F .text	00000092 chSchGoSleepS
200017d8 g       *ABS*	00000000 __heap_base__
080035d0 g       *ABS*	00000000 _etext
08001030 g     F .text	00000074 chThdCreateI
08000690 g     F .text	0000002c dbg_check_enable
08002ef0 g     F .text	0000001c turnCountdownOff
08000200  w    F .text	00000002 VectorC8
08002f60 g     F .text	00000092 FLASH_ErasePage
08000e10 g     F .text	00000090 chSchWakeupS
08001e30 g     F .text	0000007e sdIncomingDataI
080019e0 g     F .text	00000082 chOQGetI
08000b90 g     F .text	0000006a _scheduler_init
080010b0 g     F .text	00000072 chThdCreateStatic
08000200  w    F .text	00000002 Vector94
08000200  w    F .text	00000002 VectorA8
08000200  w    F .text	00000002 VectorB4
08000c00 g     F .text	00000072 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000210  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
080009c0 g     F .text	00000044 _vt_init
08000200  w    F .text	00000002 Vector74
08001b90 g     F .text	0000001c halInit
20000818 g       .bss	00000000 _bss_start
08000200  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
08000200  w    F .text	00000002 DebugMonitorVector
08000700 g     F .text	0000003a dbg_check_unlock
08000200  w    F .text	00000002 Vector40
08000110 g     F .text	000000f0 ResetHandler
08001810 g     F .text	000000e0 chIQReadTimeout
08000200  w    F .text	00000002 VectorBC
08000280 g     F .text	00000048 _port_init
08001f40 g     F .text	000000e2 hal_lld_init
08001190 g     F .text	00000076 chThdExitS
20000928 g     O .bss	00000408 dbg_trace_buffer
08000200  w    F .text	00000002 PendSVVector
08002f40 g     F .text	0000001a FLASH_Lock
08000a10 g     F .text	000000a6 chVTSetI
08000200  w    F .text	00000002 Vector64
200017d8 g       .bss	00000000 _bss_end
20000d30 g     O .bss	00000004 dbg_panic_msg
08000100  w    F .text	00000002 _default_exit
08002620 g     F .text	000000de _pal_lld_setgroupmode
08000200  w    F .text	00000002 VectorCC
08002490 g     F .text	00000030 sd_lld_init
08000200  w    F .text	00000002 Vector54
08000200  w    F .text	00000002 Vector98
08000200  w    F .text	00000002 VectorD8
08000200  w    F .text	00000002 Vector24
08000880 g     F .text	0000002c chDbgCheckClassI
080012f0 g     F .text	00000028 chMtxLock
08002cb0 g     F .text	00000030 initDfu
08000ea0 g     F .text	00000084 chSchDoReschedule
08000510 g     F .text	000000a2 chSysInit
08001130 g     F .text	0000003e chThdSleep
08001690 g     F .text	0000004a chIQInit
08000200  w    F .text	00000002 Vector84
08000220 g     F .text	0000002c SysTickVector
20000920 g     O .bss	00000004 dbg_isr_cnt
08002030 g     F .text	00000124 stm32_clock_init
08002520 g     F .text	000000f2 _pal_lld_init
08001d40 g     F .text	00000008 sdInit
08000200  w    F .text	00000002 BusFaultVector
08000200  w    F .text	00000002 VectorD0
08001b50 g     F .text	00000036 _core_init
08001dc0 g     F .text	00000062 sdStart
08003150 g     F .text	00000052 FLASH_WaitForLastOperation
08000200  w    F .text	00000002 VectorE4
08000200  w    F .text	00000002 VectorC0
080003a0 g     F .text	00000014 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000250 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
080009a0 g     F .text	0000001a chDbgPanic
20000d34 g     O .bss	00000010 vtlist
08000200  w    F .text	00000002 HardFaultVector
080002d0 g     F .text	000000bc _port_irq_epilogue
080008b0 g     F .text	0000002c chDbgCheckClassS
08000820 g     F .text	00000054 dbg_check_leave_isr
080035d0 g       *ABS*	00000000 _textdata
08000200  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08000200  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08002720 g     F .text	00000028 main
08000200  w    F .text	00000002 Vector6C
20000d44 g     O .bss	00000020 rlist
08000200  w    F .text	00000002 VectorA0
080007c0 g     F .text	00000054 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
08000200  w    F .text	00000002 VectorC4
08000200  w    F .text	00000002 Vector7C
080012b0 g     F .text	00000032 chMtxInit
080004f0 g     F .text	0000001a _idle_thread
08001a70 g     F .text	000000e0 chOQWriteTimeout
08000200  w    F .text	00000002 VectorB0
08000200  w    F .text	00000002 Vector90
20000924 g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
080003c0 g     F .text	00000018 _port_thread_start
08000200  w    F .text	00000002 Vector60
08000200  w    F .text	00000002 Vector1C
08000200  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000200  w    F .text	00000002 Vector70
08002470 g     F .text	0000001c VectorD4
08000490 g     F .text	00000060 nvicSetSystemHandlerPriority
20000818 g     O .bss	000000c0 _idle_thread_wa
080018f0 g     F .text	00000048 chOQInit
08001770 g     F .text	00000098 chIQGetTimeout
20000800 g       .data	00000000 _data
08000200  w    F .text	00000002 Vector4C
08000200  w    F .text	00000002 Vector80
080016e0 g     F .text	00000088 chIQPutI
08000390 g     F .text	0000000e _port_switch_from_isr
08000200  w    F .text	00000002 Vector68
08001430 g     F .text	000000e4 chMtxUnlock
080008e0 g     F .text	00000020 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000200  w    F .text	00000002 Vector78
20005000 g       *ABS*	00000000 __ram_end__
20000818 g       .data	00000000 _edata
200017d8 g       *ABS*	00000000 _end
08000ac0 g     F .text	00000072 chVTResetI
08000200 g     F .text	00000002 _unhandled_exception
08001d50 g     F .text	00000068 sdObjectInit
08000200  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000900 g     F .text	00000094 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000d6c g     O .bss	00000454 SD1
08000f50 g     F .text	000000aa _thread_init
08000200  w    F .text	00000002 Vector50
08001940 g     F .text	0000009c chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000200  w    F .text	00000002 Vector44
08000200  w    F .text	00000002 Vector28
08002710 g     F .text	00000002 boardInit
08000200  w    F .text	00000002 VectorB8
080024c0 g     F .text	0000005e sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000780 g     F .text	0000003a dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000200  w    F .text	00000002 Vector34
08002c80 g     F .text	00000026 setLeds
08002700 g     F .text	00000008 __early_init
080030d0 g     F .text	00000072 FLASH_GetBank1Status
08000200  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
08000200  w    F .text	00000002 Vector20
08002750 g     F .text	00000064 initCpuIo


