
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002394 memsz 0x00002398 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08002398 align 2**15
         filesz 0x00000000 memsz 0x00000fd0 flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022a4  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002394  08002394  0000a394  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  4 .bss          00000fd0  20000800  08002398  00010800  2**3
                  ALLOC
  5 .debug_abbrev 000058c3  00000000  00000000  0000a394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000162bb  00000000  00000000  0000fc57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00009257  00000000  00000000  00025f12  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000088b4  00000000  00000000  0002f169  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00001793  00000000  00000000  00037a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00003681  00000000  00000000  000391b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000ef8  00000000  00000000  0003c831  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000018f8  00000000  00000000  0003d729  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000035f9  00000000  00000000  0003f021  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      0000002a  00000000  00000000  0004261a  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  00042644  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00002730  00000000  00000000  00042678  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002394 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800030c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	00000048 mainthread.4646
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000970 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000f80 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d4c l     O .bss	00000004 endmem
20000d50 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001300 l     F .text	0000000c putwouldblock
08001310 l     F .text	0000000c getwouldblock
08001320 l     F .text	00000022 getflags
08001350 l     F .text	00000006 readt
08001360 l     F .text	0000000a reads
08001370 l     F .text	00000006 writet
08001380 l     F .text	0000000a writes
08001390 l     F .text	00000006 gett
080013a0 l     F .text	00000006 putt
080022a0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
080015f0 l     F .text	00000014 notify1
080022d0 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
080022e0 l     O .text	00000012 cfgtab.5744
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
08001a50 l     F .text	00000002 dfu_write_sector
08001a60 l     F .text	00000004 dfu_run_firmware
08001a70 l     F .text	0000000a dfu_push
08001a80 l     F .text	00000006 set_led
08001a90 l     F .text	0000002c writeResult
08001ac0 l     F .text	00000010 writeEom
08001ad0 l     F .text	000000a0 firmware_version
08001b70 l     F .text	00000094 hardware_version
08002340 l     O .text	00000018 funcs
200011a8 l     O .bss	00000001 slash.6114
200011ac l     O .bss	00000020 buffer
200011cc l     O .bss	00000004 out_index.6115
200011d0 l     O .bss	00000020 args
00000000 l    df *ABS*	00000000 led_ctrl.c
08001d60 l     F .text	00000060 ledsThread
200011f0 l     O .bss	00000010 mutex
20001200 l     O .bss	00000004 value
20001208 l     O .bss	000001b0 waLeds
00000000 l    df *ABS*	00000000 dfu_ctrl.c
08001e40 l     F .text	00000030 startFirmwareI
08001e70 l     F .text	00000014 turnCountdownOff
200013b8 l     O .bss	00000400 sector
200017b8 l     O .bss	00000014 vt
200017cc l     O .bss	00000004 byteIndex
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 stm32_dma.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32f10x_flash.c
00000000 l    df *ABS*	00000000 memset.c
08002300 g     O .text	0000003c pal_default_config
080002e0  w    F .text	00000002 Vector58
080002e0  w    F .text	00000002 VectorE8
080002e0  w    F .text	00000002 Vector9C
08000440 g     F .text	00000044 nvicEnableVector
08000660 g     F .text	00000034 dbg_check_lock_from_isr
08000ef0 g     F .text	00000048 chEvtSignalFlagsI
08001f20 g     F .text	00000034 dfuStartFirmware
080002e0  w    F .text	00000002 VectorAC
08000ce0 g     F .text	00000018 chThdExit
08000550 g     F .text	00000054 chSysTimerHandlerI
08000f40 g     F .text	00000034 chEvtBroadcastFlagsI
08000a00 g     F .text	0000004c chSchGoSleepTimeoutS
08000d30 g     F .text	00000100 chMtxLockS
080005e0 g     F .text	00000034 dbg_check_lock
080002e0  w    F .text	00000002 Vector5C
080002e0  w    F .text	00000002 NMIVector
08001dc0 g     F .text	00000054 initLed
08001eb0 g     F .text	00000070 dfuPushBytes
080002e0  w    F .text	00000002 Vector8C
080002e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08001c60 g     F .text	000000f8 processCpuIo
080009b0 g     F .text	00000050 chSchGoSleepS
200017d0 g       *ABS*	00000000 __heap_base__
08002398 g       *ABS*	00000000 _etext
08000b50 g     F .text	0000007c chThdCreateI
080005b0 g     F .text	00000028 dbg_check_enable
080002e0  w    F .text	00000002 VectorC8
08000a50 g     F .text	00000060 chSchWakeupS
08001460 g     F .text	00000060 sdIncomingDataI
080011b0 g     F .text	0000004c chOQGetI
08000910 g     F .text	00000018 _scheduler_init
08000bd0 g     F .text	00000084 chThdCreateStatic
080002e0  w    F .text	00000002 Vector94
080002e0  w    F .text	00000002 VectorA8
080002e0  w    F .text	00000002 VectorB4
08000930 g     F .text	00000040 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080002f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000840 g     F .text	00000018 _vt_init
080002e0  w    F .text	00000002 Vector74
080012e0 g     F .text	0000001c halInit
20000800 g       .bss	00000000 _bss_start
080002e0  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
080002e0  w    F .text	00000002 DebugMonitorVector
08000620 g     F .text	00000038 dbg_check_unlock
080002e0  w    F .text	00000002 Vector40
08000110 g     F .text	000001c4 ResetHandler
08001090 g     F .text	00000090 chIQReadTimeout
080002e0  w    F .text	00000002 VectorBC
08000330 g     F .text	00000034 _port_init
080014c0 g     F .text	0000009c hal_lld_init
08000c90 g     F .text	00000050 chThdExitS
2000090c g     O .bss	00000408 dbg_trace_buffer
080002e0  w    F .text	00000002 PendSVVector
08000860 g     F .text	00000054 chVTSetI
080002e0  w    F .text	00000002 Vector64
200017d0 g       .bss	00000000 _bss_end
20000d18 g     O .bss	00000004 dbg_panic_msg
08000100  w    F .text	00000002 _default_exit
080018b0 g     F .text	00000144 _pal_lld_setgroupmode
080002e0  w    F .text	00000002 VectorCC
08001790 g     F .text	00000024 sd_lld_init
080002e0  w    F .text	00000002 Vector54
080002e0  w    F .text	00000002 Vector98
080002e0  w    F .text	00000002 VectorD8
080002e0  w    F .text	00000002 Vector24
08000760 g     F .text	0000002c chDbgCheckClassI
08000e30 g     F .text	00000020 chMtxLock
08001e90 g     F .text	0000001c initDfu
08000ab0 g     F .text	0000004c chSchDoReschedule
080004e0 g     F .text	0000006c chSysInit
08000c60 g     F .text	00000030 chThdSleep
08000fb0 g     F .text	0000001a chIQInit
080002e0  w    F .text	00000002 Vector84
080003e0 g     F .text	0000002a SysTickVector
20000908 g     O .bss	00000004 dbg_isr_cnt
08001560 g     F .text	0000008c stm32_clock_init
08001840 g     F .text	00000070 _pal_lld_init
080013b0 g     F .text	00000004 sdInit
080002e0  w    F .text	00000002 BusFaultVector
080002e0  w    F .text	00000002 VectorD0
080012b0 g     F .text	00000028 _core_init
08001410 g     F .text	0000004c sdStart
080002e0  w    F .text	00000002 VectorE4
080002e0  w    F .text	00000002 VectorC0
08000410 g     F .text	00000010 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000310 g     F .text	00000012 SVCallVector
080000f0  w    F .text	00000002 __late_init
08000830 g     F .text	0000000c chDbgPanic
20000d1c g     O .bss	00000010 vtlist
080002e0  w    F .text	00000002 HardFaultVector
08000370 g     F .text	00000070 _port_irq_epilogue
08000790 g     F .text	0000002c chDbgCheckClassS
08000720 g     F .text	00000040 dbg_check_leave_isr
08002398 g       *ABS*	00000000 _textdata
080002e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
080002e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08001a20 g     F .text	00000028 main
080002e0  w    F .text	00000002 Vector6C
20000d2c g     O .bss	00000020 rlist
080002e0  w    F .text	00000002 VectorA0
080006e0 g     F .text	00000040 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
080002e0  w    F .text	00000002 VectorC4
080002e0  w    F .text	00000002 Vector7C
08000d00 g     F .text	00000024 chMtxInit
080004c0 g     F .text	00000014 _idle_thread
08001200 g     F .text	000000a4 chOQWriteTimeout
080002e0  w    F .text	00000002 VectorB0
080002e0  w    F .text	00000002 Vector90
20000d14 g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
08000420 g     F .text	00000016 _port_thread_start
080002e0  w    F .text	00000002 Vector60
080002e0  w    F .text	00000002 Vector1C
080002e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
080002e0  w    F .text	00000002 Vector70
08001610 g     F .text	00000178 VectorD4
08000490 g     F .text	00000030 nvicSetSystemHandlerPriority
20000848 g     O .bss	000000c0 _idle_thread_wa
08001120 g     F .text	00000018 chOQInit
08001030 g     F .text	0000005a chIQGetTimeout
20000800 g       .bss	00000000 _data
080002e0  w    F .text	00000002 Vector4C
080002e0  w    F .text	00000002 Vector80
08000fd0 g     F .text	00000052 chIQPutI
08000300 g     F .text	0000000e _port_switch_from_isr
080002e0  w    F .text	00000002 Vector68
08000e50 g     F .text	00000094 chMtxUnlock
080007c0 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
080002e0  w    F .text	00000002 Vector78
20005000 g       *ABS*	00000000 __ram_end__
20000800 g       .bss	00000000 _edata
200017d0 g       *ABS*	00000000 _end
080008c0 g     F .text	00000048 chVTResetI
080002e0 g     F .text	00000002 _unhandled_exception
080013c0 g     F .text	00000044 sdObjectInit
080002e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
080007e0 g     F .text	00000044 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000d54 g     O .bss	00000454 SD1
08000b00 g     F .text	00000044 _thread_init
080002e0  w    F .text	00000002 Vector50
08001140 g     F .text	00000066 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080002e0  w    F .text	00000002 Vector44
080002e0  w    F .text	00000002 Vector28
08001a10 g     F .text	00000002 boardInit
080002e0  w    F .text	00000002 VectorB8
080017c0 g     F .text	00000074 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
080006a0 g     F .text	0000003c dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
080002e0  w    F .text	00000002 Vector34
08001e20 g     F .text	00000020 setLeds
08001a00 g     F .text	00000004 __early_init
080002e0  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080002e0  w    F .text	00000002 Vector20
08001c10 g     F .text	00000048 initCpuIo


