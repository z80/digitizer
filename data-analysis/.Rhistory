ds$d2 <- (ds$d2 - 32767)/32768
ds$d3 <- (ds$d3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$d0t    <- ds$d0*ds$t
ds$d1t    <- ds$d1*ds$t
ds$expt   <- exp( ds$t )
ds$expd0t <- exp( ds$d0t )
ds$expd1t <- exp( ds$d1t )
ds$d0pow3   <- ds$d0*ds$d0*ds$d0
ds$d0pow2   <- ds$d0*ds$d0
ds$d1pow2   <- ds$d1*ds$d1
ds$d1pow3   <- ds$d1*ds$d1*ds$d1
ds$workV <- workOrigData$v/10000
M <- cor( ds )
library(corrplot)
corrplot( M, method = "circle" )
REPEATS <- 4
FOLDS <- 4
workRes <- res
workDataAltered <- ds
workFla    <- workRes$fla
workRegObj <- workRes$regObj
library( formula.tools )
fla <-as.character( workFla )
print( fla )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
n = 1
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
box()
workSd <- sd( y )
print( paste( "work SD is ", as.symbol( workSd ), sep="" ) )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d3 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
box()
workSd <- sd( y )
print( paste( "work SD is ", as.symbol( workSd ), sep="" ) )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d2 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
box()
workSd <- sd( y )
print( paste( "work SD is ", as.symbol( workSd ), sep="" ) )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
box()
workSd <- sd( y )
print( paste( "work SD is ", as.symbol( workSd ), sep="" ) )
setwd( "c:/projects/digitizer.git/data-analysis" )
source( "./min-square-enum.R" )
workOrigData <- read.table( './work_dac.dat' )
names( workOrigData ) <- c( 'd0', 'd1', 'd2', 'd3', 't', 'v' )
ds <- workOrigData[ , 1:5 ]
#Make data normalized.
ds$d0 <- (ds$d0 - 32767)/32768
ds$d1 <- (ds$d1 - 32767)/32768
ds$d2 <- (ds$d2 - 32767)/32768
ds$d3 <- (ds$d3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$d0t    <- ds$d0*ds$t
ds$d1t    <- ds$d1*ds$t
ds$expt   <- exp( ds$t )
ds$expd0t <- exp( ds$d0t )
ds$expd1t <- exp( ds$d1t )
ds$d0pow2   <- ds$d0*ds$d0
ds$d0pow3   <- ds$d0*ds$d0*ds$d0
ds$d1pow2   <- ds$d1*ds$d1
ds$d1pow3   <- ds$d1*ds$d1*ds$d1
ds$workV <- workOrigData$v/10000
M <- cor( ds )
library(corrplot)
corrplot( M, method = "circle" )
REPEATS <- 4
FOLDS <- 4
#res <- bestFormula( ds, FOLDS, REPEATS )
#workRes <- res
#workDataAltered <- ds
workFla    <- workRes$fla
workRegObj <- workRes$regObj
library( formula.tools )
fla <-as.character( workFla )
print( fla )
workFla <- as.formula( "d$workV ~ d$d0 + d$d1 + d$d0t + d$d1t + d$t + d$tpow3" )
d <- workDataAltered
wobj <- lm( workFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$workV * 10000
y <- y - x
plot( x, y, main = "Data", xaxt = "n", frame = TRUE, col = "red" )
box()
workSd <- sd( y )
print( paste( "work SD is ", as.symbol( workSd ), sep="" ) )
wobj$coefficients
probeOrigData <- read.table( './probe_dac.dat' )
names( probeOrigData ) <- c( 'd0', 'd1', 'd2', 'd3', 't', 'v' )
ds <- probeOrigData[ , 1:5 ]
#Make data normalized.
ds$d0 <- (ds$d0 - 32767)/32768
ds$d1 <- (ds$d1 - 32767)/32768
ds$d2 <- (ds$d2 - 32767)/32768
ds$d3 <- (ds$d3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$d2t    <- ds$d2*ds$t
ds$d3t    <- ds$d3*ds$t
ds$expt   <- exp( ds$t )
ds$expd2t <- exp( ds$d2t )
ds$expd3t <- exp( ds$d3t )
ds$d2pow2   <- ds$d2*ds$d2
ds$d2pow3   <- ds$d2*ds$d2*ds$d2
ds$d3pow2   <- ds$d3*ds$d3
ds$d3pow3   <- ds$d3*ds$d3*ds$d3
ds$probeV <- probeOrigData$v/10000
M <- cor( ds )
library(corrplot)
corrplot( M, method = "circle" )
REPEATS <- 4
FOLDS <- 4
#res <- bestFormula( ds, FOLDS, REPEATS )
#probeRes <- res
#probeDataAltered <- ds
probeFla <- as.formula( "d$probeV ~ d$d1 + d$d3 + d$t + d$tpow2 + d$d2t + d$d3t + d$expt + d$expd2t + d$d2pow2 + d$d2pow3 + d$d3pow3" )
probeFla <- as.formula( "d$probeV ~ d$d0 + d$d2 + d$d3 + d$tpow2 + d$tpow3 + d$d2t + d$d3t + d$expt + d$expd3t + d$d2pow2 + d$d3pow3" )
#with new data
probeFla <- as.formula( "d$probeV ~ d$d0 + d$d3 + d$t + d$tpow3 + d$d3t + d$expt + d$expd2t + d$d2pow2 + d$d2pow3 + d$d3pow3" )
# Remove absurd data parts.
probeFla <- as.formula( "d$probeV ~ d$d2 + d$d3 + d$t + d$tpow3 + d$d3t + d$d2t" )
# d2, d3, d2*t, d3*t, t, t^3.
d <- probeDataAltered
wobj <- lm( probeFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$probeV * 10000
probeOrigData <- read.table( './probe_dac.dat' )
names( probeOrigData ) <- c( 'd0', 'd1', 'd2', 'd3', 't', 'v' )
ds <- probeOrigData[ , 1:5 ]
#Make data normalized.
ds$d0 <- (ds$d0 - 32767)/32768
ds$d1 <- (ds$d1 - 32767)/32768
ds$d2 <- (ds$d2 - 32767)/32768
ds$d3 <- (ds$d3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$d2t    <- ds$d2*ds$t
ds$d3t    <- ds$d3*ds$t
ds$expt   <- exp( ds$t )
ds$expd2t <- exp( ds$d2t )
ds$expd3t <- exp( ds$d3t )
ds$d2pow2   <- ds$d2*ds$d2
ds$d2pow3   <- ds$d2*ds$d2*ds$d2
ds$d3pow2   <- ds$d3*ds$d3
ds$d3pow3   <- ds$d3*ds$d3*ds$d3
ds$probeV <- probeOrigData$v/10000
M <- cor( ds )
library(corrplot)
corrplot( M, method = "circle" )
REPEATS <- 4
FOLDS <- 4
#res <- bestFormula( ds, FOLDS, REPEATS )
#probeRes <- res
#probeDataAltered <- ds
probeFla <- as.formula( "d$probeV ~ d$d1 + d$d3 + d$t + d$tpow2 + d$d2t + d$d3t + d$expt + d$expd2t + d$d2pow2 + d$d2pow3 + d$d3pow3" )
probeFla <- as.formula( "d$probeV ~ d$d0 + d$d2 + d$d3 + d$tpow2 + d$tpow3 + d$d2t + d$d3t + d$expt + d$expd3t + d$d2pow2 + d$d3pow3" )
#with new data
probeFla <- as.formula( "d$probeV ~ d$d0 + d$d3 + d$t + d$tpow3 + d$d3t + d$expt + d$expd2t + d$d2pow2 + d$d2pow3 + d$d3pow3" )
# Remove absurd data parts.
probeFla <- as.formula( "d$probeV ~ d$d2 + d$d3 + d$d2t + d$d3t + d$t + d$tpow3" )
# d2, d3, d2*t, d3*t, t, t^3.
d <- probeDataAltered
wobj <- lm( probeFla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$probeV * 10000
y <- y - x
plot( d$t, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
REPEATS <- 4
FOLDS <- 4
adcData <- read.table( './adc.dat' )
names( adcData ) <- c( 'a0', 'a1', 'a2', 'a3', 't', 'v0', 'v1', 'v2', 'v3' )
ds <- adcData[ , 1:5 ]
View(adcData)
View(ds)
ds$a0 <- (ds$a0 - 32767)/32768
ds$a1 <- (ds$a1 - 32767)/32768
ds$a2 <- (ds$a2 - 32767)/32768
ds$a3 <- (ds$a3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$a0t    <- ds$a0*ds$t
ds$a1t    <- ds$a1*ds$t
ds$a2t    <- ds$a2*ds$t
ds$a3t    <- ds$a3*ds$t
ds$expt   <- exp( ds$t )
ds$expd2t <- exp( ds$d2t )
ds$expd3t <- exp( ds$d3t )
ds$d2pow2   <- ds$d2*ds$d2
ds$d2pow3   <- ds$d2*ds$d2*ds$d2
adcData <- read.table( './adc.dat' )
names( adcData ) <- c( 'a0', 'a1', 'a2', 'a3', 't', 'v0', 'v1', 'v2', 'v3' )
ds <- adcData[ , 1:5 ]
ds$a0 <- (ds$a0 - 32767)/32768
ds$a1 <- (ds$a1 - 32767)/32768
ds$a2 <- (ds$a2 - 32767)/32768
ds$a3 <- (ds$a3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$a0t    <- ds$a0*ds$t
ds$a1t    <- ds$a1*ds$t
ds$a2t    <- ds$a2*ds$t
ds$a3t    <- ds$a3*ds$t
ds$v <- adcData$v0/10000
res <- bestFormula( ds, FOLDS, REPEATS )
fla <- as.formula( "d$v ~ d$a0 + d$a1 + d$a2 + d$a3 + d$tpow2 + d$tpow3 + d$a0t + d$a1t" )
wobj <- lm( fla, ds )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$probeV * 10000
fla <- as.formula( "d$v ~ d$a0 + d$a1 + d$a2 + d$a3 + d$tpow2 + d$tpow3 + d$a0t + d$a1t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
fla <- as.formula( "d$v ~ d$a0 + d$a1 + d$tpow2 + d$tpow3 + d$a0t + d$a1t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
fla <- as.formula( "d$v ~ d$a0 + d$a1 + d$a2 + d$a3 + d$tpow2 + d$tpow3 + d$a0t + d$a1t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v1/10000
res <- bestFormula( ds, FOLDS, REPEATS )
ds$v <- adcData$v1/10000
res <- bestFormula( ds, FOLDS, REPEATS )
fla <- as.formula( "d$v ~ d$a1 + d$a3 + d$tpow2 + d$tpow3 + d$a2t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v1/10000
fla <- as.formula( "d$v ~ d$a1 + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v2/10000
res <- bestFormula( ds, FOLDS, REPEATS )
fla <- as.formula( "d$v ~ d$a0 + d$a1 + d$a2 + d$a3 + d$t + d$a2t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v2/10000
fla <- as.formula( "d$v ~ d$a2 + d$t + d$a2t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v3/10000
res <- bestFormula( ds, FOLDS, REPEATS )
fla <- as.formula( "d$v ~ d$a1 + d$a3 + d$tpow3 + d$a1t + d$a2t + d$a3t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v3/10000
res <- bestFormula( ds, FOLDS, REPEATS )
fla <- as.formula( "d$v ~ d$a1 + d$a3 + d$tpow3 + d$a3t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
fla <- as.formula( "d$v ~ d$a3 + d$tpow3 + d$a3t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
fla <- as.formula( "d$v ~ d$a3 + d$tpow3 + d$a3t + d$t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
fla <- as.formula( "d$v ~ d$a3 + d$tpow2 + d$tpow3 + d$a3t + d$t" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
plot( d$a2, y )
plot( d$a0, y )
plot( d$a2, y )
plot( x, y )
fla <- as.formula( "d$v ~ d$a0 + d$a0t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
ds$v <- adcData$v0/10000
fla <- as.formula( "d$v ~ d$a0 + d$a0t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
plot( d$a1, y )
plot( d$a2, y )
plot( d$a3, y )
plot( x, y )
adcData <- read.table( './adc.dat' )
ds <- adcData[ , 1:5 ]
ds$a0 <- (ds$a0 - 32767)/32768
ds$a1 <- (ds$a1 - 32767)/32768
ds$a2 <- (ds$a2 - 32767)/32768
ds$a3 <- (ds$a3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$a0t    <- ds$a0*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$a1t    <- ds$a1*ds$t
ds$a2t    <- ds$a2*ds$t
adcData <- read.table( './adc.dat' )
names( adcData ) <- c( 'a0', 'a1', 'a2', 'a3', 't', 'v0', 'v1', 'v2', 'v3' )
ds <- adcData[ , 1:5 ]
ds$a0 <- (ds$a0 - 32767)/32768
ds$a1 <- (ds$a1 - 32767)/32768
ds$a2 <- (ds$a2 - 32767)/32768
ds$a3 <- (ds$a3 - 32767)/32768
ds$t  <- ds$t/50.0
ds$tpow2  <- ds$t*ds$t
ds$tpow3  <- ds$t*ds$t*ds$t
ds$a0t    <- ds$a0*ds$t
ds$a1t    <- ds$a1*ds$t
ds$a2t    <- ds$a2*ds$t
ds$a3t    <- ds$a3*ds$t
ds$v <- adcData$v0/10000
fla <- as.formula( "d$v ~ d$a0 + d$a0t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v1/10000
fla <- as.formula( "d$v ~ d$a1 + d$a1t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v2/10000
fla <- as.formula( "d$v ~ d$a2 + d$a2t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
ds$v <- adcData$v3/10000
fla <- as.formula( "d$v ~ d$a3 + d$a3t + d$t + d$tpow2 + d$tpow3" )
d <- ds
wobj <- lm( fla, d )
x <- predict( wobj, newdata=d, type="response" )
x <- x * 10000
y <- d$v * 10000
y <- y - x
plot( x, y )
probeSd <- sd( y )
print( paste( "probe SD is ", as.symbol( probeSd ), sep="" ) )
wobj$coefficients
